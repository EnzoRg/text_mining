[{"question_id":724,"ground_truth":"SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'","gemini_zero_shot":"SELECT superhero_name FROM superhero s JOIN colour ec ON s.eye_colour_id = ec.id JOIN colour hc ON s.hair_colour_id = hc.id WHERE ec.colour = 'Blue' AND hc.colour = 'Blond';","gpt4_mini_zero_shot":"SELECT s.superhero_name FROM superhero s JOIN colour eye ON s.eye_colour_id = eye.id JOIN colour hair ON s.hair_colour_id = hair.id WHERE eye.colour = 'blue' AND hair.colour = 'blond';","gemini_zero_shot_hint":"SELECT superhero_name FROM superhero WHERE eye_colour_id = ( SELECT id FROM colour WHERE colour = 'Blue' ) AND hair_colour_id = ( SELECT id FROM colour WHERE colour = 'Blond' );","gpt4_mini_zero_shot_hint":"SELECT s.superhero_name FROM superhero s JOIN colour ce ON s.eye_colour_id = ce.id JOIN colour ch ON s.hair_colour_id = ch.id WHERE ce.colour = 'Blue' AND ch.colour = 'Blond';","gemini_few_shot":" SELECT s.superhero_name FROM superhero s JOIN colour ec ON s.eye_colour_id = ec.id JOIN colour hc ON s.hair_colour_id = hc.id WHERE ec.colour = 'Blue' AND hc.colour = 'Blond'; ","gpt4_mini_few_shot":"SELECT s.superhero_name FROM superhero s JOIN colour ce ON s.eye_colour_id = ce.id JOIN colour ch ON s.hair_colour_id = ch.id WHERE ce.colour = 'Blue' AND ch.colour = 'Blond';","gemini_few_shot_hint":" SELECT s.superhero_name FROM superhero s JOIN colour ec ON s.eye_colour_id = ec.id JOIN colour hc ON s.hair_colour_id = hc.id WHERE ec.colour = 'Blue' AND hc.colour = 'Blond'; ","gpt4_mini_few_shot_hint":"SELECT s.superhero_name FROM superhero s JOIN colour c_eye ON s.eye_colour_id = c_eye.id JOIN colour c_hair ON s.hair_colour_id = c_hair.id WHERE c_eye.colour = 'Blue' AND c_hair.colour = 'Blond';"},{"question_id":730,"ground_truth":"SELECT superhero_name FROM superhero AS T1 WHERE EXISTS (SELECT 1 FROM hero_power AS T2 INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.id = T2.hero_id)AND EXISTS (SELECT 1 FROM publisher AS T4 WHERE T4.publisher_name = 'Marvel Comics' AND T1.publisher_id = T4.id)","gemini_zero_shot":"SELECT superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength';","gpt4_mini_zero_shot":"SELECT s.superhero_name, s.full_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength';","gemini_zero_shot_hint":"SELECT superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.publisher_id = ( SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' );","gpt4_mini_zero_shot_hint":"SELECT s.superhero_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength';","gemini_few_shot":" SELECT      s.superhero_name FROM      superhero s JOIN      publisher p ON s.publisher_id = p.id JOIN      hero_power hp ON s.id = hp.hero_id JOIN      superpower sp ON hp.power_id = sp.id WHERE      p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength'; ","gpt4_mini_few_shot":"SELECT s.superhero_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength';","gemini_few_shot_hint":" SELECT s.superhero_name\r FROM superhero s\r JOIN publisher p ON s.publisher_id = p.id\r JOIN hero_power hp ON s.id = hp.hero_id\r JOIN superpower sp ON hp.power_id = sp.id\r WHERE p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength'; ","gpt4_mini_few_shot_hint":"SELECT s.superhero_name, s.full_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength';"},{"question_id":743,"ground_truth":"SELECT (CAST(COUNT(*) AS REAL) * 100 \/ (SELECT COUNT(*) FROM superhero)), CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'","gemini_zero_shot":"WITH TotalSuperheroes AS ( SELECT COUNT(*) AS total_superheroes FROM superhero ) SELECT ROUND(COUNT(*) \/ (SELECT total_superheroes FROM TotalSuperheroes) * 100, 2) AS percentage_self_interested_superheroes, COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 END) AS marvel_self_interested_superheroes FROM superhero s JOIN alignment a ON s.alignment_id = a.id JOIN publisher p ON s.publisher_id = p.id WHERE a.alignment IN ('Neutral', 'Good', 'Bad');","gpt4_mini_zero_shot":"WITH SelfInterestedHeroes AS ( SELECT s.id FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment IN ('self-interest', 'moral code') ), TotalHeroes AS ( SELECT COUNT(*) AS total_count FROM superhero ), SelfInterestedHeroesCount AS ( SELECT COUNT(*) AS self_interested_count FROM SelfInterestedHeroes ), MarvelSelfInterestedHeroesCount AS ( SELECT COUNT(*) AS marvel_count FROM SelfInterestedHeroes si JOIN publisher p ON (SELECT s.publisher_id FROM superhero s WHERE s.id = si.id) = p.id WHERE p.publisher_name = 'Marvel Comics' ) SELECT (SELECT self_interested_count * 100.0 \/ total_count FROM SelfInterestedHeroesCount, TotalHeroes) AS percentage_self_interested, (SELECT marvel_count FROM MarvelSelfInterestedHeroesCount) AS marvel_count;","gemini_zero_shot_hint":"SELECT ( SELECT COUNT(*) FROM superhero WHERE alignment_id = ( SELECT id FROM alignment WHERE alignment = 'Bad' ) ) \/ ( SELECT COUNT(*) FROM superhero ) * 100 AS percentage_bad_alignment, ( SELECT COUNT(*) FROM superhero WHERE alignment_id = ( SELECT id FROM alignment WHERE alignment = 'Bad' ) AND publisher_id = ( SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' ) ) AS count_bad_alignment_marvel","gpt4_mini_zero_shot_hint":"SELECT (COUNT(CASE WHEN a.alignment = 'Bad' THEN 1 END) * 100.0 \/ COUNT(s.id)) AS percentage_bad_superheroes, COUNT(CASE WHEN a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics' THEN 1 END) AS marvel_bad_superheroes FROM superhero s JOIN alignment a ON s.alignment_id = a.id JOIN publisher p ON s.publisher_id = p.id;","gemini_few_shot":" WITH SelfishHeroes AS (   SELECT     COUNT(DISTINCT s.id) AS total_selfish_heroes   FROM superhero AS s   JOIN alignment AS a     ON s.alignment_id = a.id   WHERE     a.alignment IN ('Self-Interest', 'Moral Code') ), MarvelSelfishHeroes AS (   SELECT     COUNT(DISTINCT s.id) AS marvel_selfish_heroes   FROM superhero AS s   JOIN alignment AS a     ON s.alignment_id = a.id   JOIN publisher AS p     ON s.publisher_id = p.id   WHERE     a.alignment IN ('Self-Interest', 'Moral Code')     AND p.publisher_name = 'Marvel Comics' ) SELECT   ROUND(     (       CAST(sh.total_selfish_heroes AS REAL) * 100 \/ (         SELECT           COUNT(*)         FROM superhero       )     ),     2   ) AS percentage_selfish_heroes,   ms.marvel_selfish_heroes FROM SelfishHeroes AS sh JOIN MarvelSelfishHeroes AS ms; ","gpt4_mini_few_shot":"WITH total_superheroes AS ( SELECT COUNT(DISTINCT s.id) AS total FROM superhero s ), self_interested_heroes AS ( SELECT COUNT(DISTINCT s.id) AS count FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment IN ('Good', 'Neutral', 'Evil') ), marvel_self_interested_heroes AS ( SELECT COUNT(DISTINCT s.id) AS count FROM superhero s JOIN alignment a ON s.alignment_id = a.id JOIN publisher p ON s.publisher_id = p.id WHERE a.alignment IN ('Good', 'Neutral', 'Evil') AND p.publisher_name = 'Marvel Comics' ) SELECT (sih.count * 100.0 \/ ts.total) AS percentage_of_self_interested, msh.count AS marvel_count FROM total_superheroes ts, self_interested_heroes sih, marvel_self_interested_heroes msh;","gemini_few_shot_hint":" WITH BadHeroes AS (   SELECT     s.id,     s.publisher_id   FROM superhero AS s   JOIN alignment AS a     ON s.alignment_id = a.id   WHERE     a.alignment = 'Bad' ) SELECT   CAST(COUNT(DISTINCT bh.id) AS REAL) * 100 \/ COUNT(DISTINCT s.id) AS percentage_of_bad_heroes,   COUNT(DISTINCT CASE WHEN bh.publisher_id = (     SELECT       id     FROM publisher     WHERE       publisher_name = 'Marvel Comics'   ) THEN bh.id ELSE NULL END) AS marvel_bad_heroes FROM superhero AS s LEFT JOIN BadHeroes AS bh   ON s.id = bh.id; ","gpt4_mini_few_shot_hint":"WITH bad_heroes AS ( SELECT COUNT(s.id) AS total_bad_heroes FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'Bad' ), total_heroes AS ( SELECT COUNT(s.id) AS total_superheroes FROM superhero s ) SELECT ROUND((bh.total_bad_heroes * 100.0 \/ th.total_superheroes), 2) AS percentage_bad_superheroes, (SELECT COUNT(s.id) FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics') AS total_bad_marvel_heroes FROM bad_heroes bh, total_heroes th;"},{"question_id":744,"ground_truth":"SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id","gemini_zero_shot":"WITH DCSuperheroesCount AS ( SELECT COUNT(*) AS dc_superheroes_count FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics' ), MarvelSuperheroesCount AS ( SELECT COUNT(*) AS marvel_superheroes_count FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' ) SELECT (SELECT dc_superheroes_count FROM DCSuperheroesCount) - (SELECT marvel_superheroes_count FROM MarvelSuperheroesCount) AS difference FROM DUAL;","gpt4_mini_zero_shot":"SELECT ABS(COUNT(CASE WHEN publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics') THEN 1 END) - COUNT(CASE WHEN publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') THEN 1 END)) AS publisher_difference FROM superhero;","gemini_zero_shot_hint":"SELECT ( SELECT COUNT(*) FROM superhero WHERE publisher_id = ( SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' ) ) - ( SELECT COUNT(*) FROM superhero WHERE publisher_id = ( SELECT id FROM publisher WHERE publisher_name = 'DC Comics' ) ) AS difference_in_superheroes;","gpt4_mini_zero_shot_hint":"SELECT ABS(COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 END) - COUNT(CASE WHEN p.publisher_name = 'DC Comics' THEN 1 END)) AS difference_in_superheroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id;","gemini_few_shot":" WITH publisher_counts AS (   SELECT     p.publisher_name,     COUNT(s.id) AS superhero_count   FROM superhero s   JOIN publisher p     ON s.publisher_id = p.id   WHERE     p.publisher_name IN ('DC Comics', 'Marvel Comics')   GROUP BY     p.publisher_name ) SELECT   p1.publisher_name AS publisher1,   p2.publisher_name AS publisher2,   p1.superhero_count - p2.superhero_count AS difference FROM publisher_counts p1 JOIN publisher_counts p2   ON p1.publisher_name <> p2.publisher_name; ","gpt4_mini_few_shot":"WITH publisher_counts AS ( SELECT p.publisher_name, COUNT(DISTINCT s.id) AS superhero_count FROM superhero s JOIN publisher p ON s.publisher_id = p.id GROUP BY p.publisher_name ) SELECT pc.publisher_name, pc.superhero_count, (SELECT superhero_count FROM publisher_counts WHERE publisher_name = 'Marvel Comics') - (SELECT superhero_count FROM publisher_counts WHERE publisher_name = 'DC Comics') AS difference FROM publisher_counts pc WHERE pc.publisher_name IN ('DC Comics', 'Marvel Comics');","gemini_few_shot_hint":" SELECT   SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN p.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) AS difference FROM superhero s JOIN publisher p   ON s.publisher_id = p.id WHERE   p.publisher_name IN ('Marvel Comics', 'DC Comics'); ","gpt4_mini_few_shot_hint":"WITH publisher_counts AS ( SELECT p.publisher_name, COUNT(s.id) AS total_heroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name IN ('DC Comics', 'Marvel Comics') GROUP BY p.publisher_name ) SELECT MAX(publisher_name) AS publisher, ABS(SUM(total_heroes) * SIGN(SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN total_heroes ELSE 0 END) - SUM(CASE WHEN publisher_name = 'DC Comics' THEN total_heroes ELSE 0 END))) AS hero_difference FROM publisher_counts;"},{"question_id":760,"ground_truth":"SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 \/ COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180","gemini_zero_shot":"WITH TotalSuperheroes150To180 AS ( SELECT COUNT(*) AS total_superheroes_150_180 FROM superhero WHERE height_cm BETWEEN 150 AND 180 ) SELECT ROUND(COUNT(*) \/ (SELECT total_superheroes_150_180 FROM TotalSuperheroes150To180) * 100, 2) AS percentage_marvel_comics FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' AND s.height_cm BETWEEN 150 AND 180;","gpt4_mini_zero_shot":"SELECT (COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 END) * 100.0) \/ COUNT(*) AS marvel_percentage FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.height_cm BETWEEN 150 AND 180;","gemini_zero_shot_hint":"SELECT ( SUM(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) \/ COUNT(*) * 100 ) AS marvel_percentage FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.height_cm BETWEEN 150 AND 180;","gpt4_mini_zero_shot_hint":"SELECT (COUNT(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 END) * 100.0) \/ COUNT(*) AS percentage_marvel_heroes FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.height_cm BETWEEN 150 AND 180;","gemini_few_shot":" WITH MarvelHeroes AS (   SELECT COUNT(DISTINCT s.id) AS total_marvel_heroes   FROM superhero s   JOIN publisher p ON s.publisher_id = p.id   WHERE p.publisher_name = 'Marvel Comics'   AND s.height_cm BETWEEN 150 AND 180 ), TotalHeroes AS (   SELECT COUNT(DISTINCT s.id) AS total_heroes   FROM superhero s   WHERE s.height_cm BETWEEN 150 AND 180 ) SELECT   ROUND((CAST(mh.total_marvel_heroes AS REAL) * 100 \/ th.total_heroes), 2) AS percentage_marvel FROM MarvelHeroes mh JOIN TotalHeroes th; ","gpt4_mini_few_shot":"WITH height_heroes AS ( SELECT COUNT(*) AS total_heroes FROM superhero s WHERE s.height_cm BETWEEN 150 AND 180 ), marvel_heroes AS ( SELECT COUNT(*) AS marvel_heroes_count FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.height_cm BETWEEN 150 AND 180 AND p.publisher_name = 'Marvel Comics' ) SELECT ROUND(marvel_heroes_count * 100.0 \/ total_heroes, 2) AS percentage_marvel FROM height_heroes, marvel_heroes;","gemini_few_shot_hint":" WITH MarvelHeroes AS (   SELECT COUNT(DISTINCT s.id) AS total_marvel_heroes   FROM superhero s   JOIN publisher p ON s.publisher_id = p.id   WHERE p.publisher_name = 'Marvel Comics' AND s.height_cm BETWEEN 150 AND 180 ), AllHeroes AS (   SELECT COUNT(DISTINCT s.id) AS total_heroes   FROM superhero s   WHERE s.height_cm BETWEEN 150 AND 180 ) SELECT ROUND((CAST(mh.total_marvel_heroes AS REAL) \/ ah.total_heroes) * 100, 2) AS percentage FROM MarvelHeroes mh, AllHeroes ah; ","gpt4_mini_few_shot_hint":"WITH filtered_heroes AS ( SELECT s.id FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.height_cm BETWEEN 150 AND 180 ) SELECT ROUND(COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 END) * 100.0 \/ COUNT(*), 2) AS percentage_marvel FROM filtered_heroes fh JOIN superhero s ON fh.id = s.id JOIN publisher p ON s.publisher_id = p.id;"},{"question_id":769,"ground_truth":"SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id INNER JOIN publisher AS T4 ON T4.id = T1.publisher_id WHERE T4.publisher_name = 'Dark Horse Comics' AND T3.attribute_name = 'Durability' ORDER BY T2.attribute_value DESC LIMIT 1","gemini_zero_shot":"WITH DurabilityScores AS ( SELECT s.superhero_name, AVG(CASE WHEN a.attribute_name = 'durability' THEN CAST(ha.attribute_value AS NUMERIC) END) AS avg_durability FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics' GROUP BY s.superhero_name ) SELECT superhero_name FROM DurabilityScores ORDER BY avg_durability DESC LIMIT 1;","gpt4_mini_zero_shot":"SELECT s.superhero_name, MAX(CAST(ha.attribute_value AS INTEGER)) AS max_durability FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE p.publisher_name = 'Dark Horse Comics' AND a.attribute_name = 'durability' GROUP BY s.superhero_name ORDER BY max_durability DESC LIMIT 1;","gemini_zero_shot_hint":"SELECT superhero_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE attribute.attribute_name = 'Durability' AND publisher.publisher_name = 'Dark Horse Comics' ORDER BY hero_attribute.attribute_value DESC LIMIT 1;","gpt4_mini_zero_shot_hint":"SELECT sh.superhero_name FROM superhero sh JOIN publisher p ON sh.publisher_id = p.id JOIN hero_attribute ha ON sh.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'durability' AND p.publisher_name = 'Dark Horse Comics' GROUP BY sh.superhero_name HAVING MAX(ha.attribute_value) = ( SELECT MAX(attribute_value) FROM hero_attribute ha2 JOIN superhero sh2 ON ha2.hero_id = sh2.id JOIN publisher p2 ON sh2.publisher_id = p2.id WHERE a.attribute_name = 'durability' AND p2.publisher_name = 'Dark Horse Comics' );","gemini_few_shot":" WITH HeroDurability AS (   SELECT     s.superhero_name,     MAX(CASE WHEN a.attribute_name = 'Durability' THEN CAST(REPLACE(ha.attribute_value, ',', '') AS REAL) ELSE NULL END) AS max_durability   FROM superhero s   JOIN hero_attribute ha ON s.id = ha.hero_id   JOIN attribute a ON ha.attribute_id = a.id   JOIN publisher p ON s.publisher_id = p.id   WHERE p.publisher_name = 'Dark Horse Comics'   GROUP BY     s.superhero_name ) SELECT   superhero_name FROM HeroDurability ORDER BY   max_durability DESC LIMIT 1; ","gpt4_mini_few_shot":"SELECT s.superhero_name, s.full_name, ha.attribute_value AS durability FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN hero_attribute ha ON s.id = ha.hero_id WHERE p.publisher_name = 'Dark Horse Comics' AND ha.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Durability') ORDER BY ha.attribute_value DESC LIMIT 1;","gemini_few_shot_hint":" WITH RankedHeroes AS (   SELECT     s.superhero_name,     MAX(ha.attribute_value) AS durability   FROM superhero AS s   JOIN publisher AS p     ON s.publisher_id = p.id   JOIN hero_attribute AS ha     ON s.id = ha.hero_id   JOIN attribute AS a     ON ha.attribute_id = a.id   WHERE     p.publisher_name = 'Dark Horse Comics' AND a.attribute_name = 'durability'   GROUP BY     s.superhero_name   ORDER BY     durability DESC   LIMIT 1 ) SELECT   superhero_name FROM RankedHeroes; ","gpt4_mini_few_shot_hint":"SELECT s.superhero_name, ha.attribute_value AS durability FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE p.publisher_name = 'Dark Horse Comics' AND a.attribute_name = 'durability' ORDER BY CAST(ha.attribute_value AS INTEGER) DESC LIMIT 1;"},{"question_id":772,"ground_truth":"SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.gender = 'Female'","gemini_zero_shot":"SELECT s.superhero_name, ec.colour AS eye_colour, hc.colour AS hair_colour, sc.colour AS skin_colour FROM superhero s JOIN colour ec ON s.eye_colour_id = ec.id JOIN colour hc ON s.hair_colour_id = hc.id JOIN colour sc ON s.skin_colour_id = sc.id JOIN publisher p ON s.publisher_id = p.id JOIN gender g ON s.gender_id = g.id WHERE p.publisher_name = 'Dark Horse Comics' AND g.gender = 'Female';","gpt4_mini_zero_shot":"SELECT c_eye.colour AS eye_colour, c_hair.colour AS hair_colour, c_skin.colour AS skin_colour FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id JOIN colour c_eye ON s.eye_colour_id = c_eye.id JOIN colour c_hair ON s.hair_colour_id = c_hair.id JOIN colour c_skin ON s.skin_colour_id = c_skin.id WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics';","gemini_zero_shot_hint":"SELECT colour.colour AS eye_colour, colour2.colour AS hair_colour, colour3.colour AS skin_colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN colour AS colour2 ON superhero.hair_colour_id = colour2.id JOIN colour AS colour3 ON superhero.skin_colour_id = colour3.id JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics';","gpt4_mini_zero_shot_hint":"SELECT sh.eye_colour_id, sh.hair_colour_id, sh.skin_colour_id FROM superhero sh JOIN gender g ON sh.gender_id = g.id JOIN publisher p ON sh.publisher_id = p.id WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics';","gemini_few_shot":" SELECT   c1.colour AS eye_colour,   c2.colour AS hair_colour,   c3.colour AS skin_colour FROM superhero AS s JOIN colour AS c1   ON s.eye_colour_id = c1.id JOIN colour AS c2   ON s.hair_colour_id = c2.id JOIN colour AS c3   ON s.skin_colour_id = c3.id JOIN gender AS g   ON s.gender_id = g.id JOIN publisher AS p   ON s.publisher_id = p.id WHERE   g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'; ","gpt4_mini_few_shot":"SELECT c_eye.colour AS eye_colour, c_hair.colour AS hair_colour, c_skin.colour AS skin_colour FROM superhero s JOIN colour c_eye ON s.eye_colour_id = c_eye.id JOIN colour c_hair ON s.hair_colour_id = c_hair.id JOIN colour c_skin ON s.skin_colour_id = c_skin.id JOIN publisher p ON s.publisher_id = p.id JOIN gender g ON s.gender_id = g.id WHERE p.publisher_name = 'Dark Horse Comics' AND g.gender = 'Female';","gemini_few_shot_hint":" SELECT   c1.colour AS eye_colour,   c2.colour AS hair_colour,   c3.colour AS skin_colour FROM superhero AS s JOIN colour AS c1   ON s.eye_colour_id = c1.id JOIN colour AS c2   ON s.hair_colour_id = c2.id JOIN colour AS c3   ON s.skin_colour_id = c3.id JOIN gender AS g   ON s.gender_id = g.id JOIN publisher AS p   ON s.publisher_id = p.id WHERE   g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'; ","gpt4_mini_few_shot_hint":"SELECT c_eye.colour AS eye_colour, c_hair.colour AS hair_colour, c_skin.colour AS skin_colour FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id JOIN colour c_eye ON s.eye_colour_id = c_eye.id JOIN colour c_hair ON s.hair_colour_id = c_hair.id JOIN colour c_skin ON s.skin_colour_id = c_skin.id WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics';"},{"question_id":773,"ground_truth":"SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.eye_colour_id = T1.skin_colour_id","gemini_zero_shot":"SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.eye_colour_id = s.hair_colour_id AND s.hair_colour_id = s.skin_colour_id;","gpt4_mini_zero_shot":"SELECT s.superhero_name, s.full_name, p.publisher_name FROM superhero s JOIN colour eye ON s.eye_colour_id = eye.id JOIN colour hair ON s.hair_colour_id = hair.id JOIN colour skin ON s.skin_colour_id = skin.id JOIN publisher p ON s.publisher_id = p.id WHERE eye.colour = hair.colour AND eye.colour = skin.colour;","gemini_zero_shot_hint":"SELECT superhero_name, publisher_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN colour AS colour2 ON superhero.hair_colour_id = colour2.id JOIN colour AS colour3 ON superhero.skin_colour_id = colour3.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE colour.colour = colour2.colour AND colour.colour = colour3.colour;","gpt4_mini_zero_shot_hint":"SELECT sh.superhero_name, p.publisher_name FROM superhero sh JOIN publisher p ON sh.publisher_id = p.id WHERE sh.hair_colour_id = sh.skin_colour_id AND sh.hair_colour_id = sh.eye_colour_id;","gemini_few_shot":" SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.eye_colour_id = s.hair_colour_id AND s.eye_colour_id = s.skin_colour_id; ","gpt4_mini_few_shot":"SELECT s.superhero_name, p.publisher_name, c_eye.colour AS eye_colour, c_hair.colour AS hair_colour, c_skin.colour AS skin_colour FROM superhero s JOIN colour c_eye ON s.eye_colour_id = c_eye.id JOIN colour c_hair ON s.hair_colour_id = c_hair.id JOIN colour c_skin ON s.skin_colour_id = c_skin.id JOIN publisher p ON s.publisher_id = p.id WHERE c_eye.colour = c_hair.colour AND c_hair.colour = c_skin.colour;","gemini_few_shot_hint":" SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.hair_colour_id = s.skin_colour_id AND s.hair_colour_id = s.eye_colour_id; ","gpt4_mini_few_shot_hint":"SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN colour c_eye ON s.eye_colour_id = c_eye.id JOIN colour c_hair ON s.hair_colour_id = c_hair.id JOIN colour c_skin ON s.skin_colour_id = c_skin.id JOIN publisher p ON s.publisher_id = p.id WHERE c_eye.colour = c_hair.colour AND c_hair.colour = c_skin.colour;"},{"question_id":775,"ground_truth":"SELECT CAST(COUNT(CASE WHEN T3.colour = 'Blue' THEN T1.id ELSE NULL END) AS REAL) * 100 \/ COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.gender = 'Female'","gemini_zero_shot":"WITH TotalFemaleHeroes AS ( SELECT COUNT(*) AS total_female_heroes FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Female' ) SELECT ROUND(COUNT(*) \/ (SELECT total_female_heroes FROM TotalFemaleHeroes) * 100, 2) AS percentage_blue_female_heroes FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN colour c ON s.eye_colour_id = c.id WHERE g.gender = 'Female' AND c.colour = 'Blue';","gpt4_mini_zero_shot":"SELECT (COUNT(CASE WHEN c.colour = 'Blue' AND g.gender = 'Female' THEN 1 END) * 100.0 \/ COUNT(CASE WHEN g.gender = 'Female' THEN 1 END)) AS blue_female_percentage FROM superhero s JOIN colour c ON s.eye_colour_id = c.id JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Female';","gemini_zero_shot_hint":"SELECT CAST( DIVIDE( (SELECT COUNT(*) FROM superhero WHERE gender = 'Female' AND eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue')), (SELECT COUNT(*) FROM superhero WHERE gender = 'Female') ) * 100.0 AS FLOAT64) AS percentage_blue_female FROM superhero;","gpt4_mini_zero_shot_hint":"SELECT (COUNT(CASE WHEN c.colour = 'Blue' THEN 1 END) * 100.0) \/ COUNT(*) AS blue_female_percentage FROM superhero sh JOIN colour c ON sh.skin_colour_id = c.id JOIN gender g ON sh.gender_id = g.id WHERE g.gender = 'Female';","gemini_few_shot":" WITH FemaleSuperheroes AS (   SELECT COUNT(DISTINCT s.id) AS total_female_superheroes   FROM superhero s   JOIN gender g ON s.gender_id = g.id   WHERE g.gender = 'Female' ), BlueFemaleSuperheroes AS (   SELECT COUNT(DISTINCT s.id) AS total_blue_female_superheroes   FROM superhero s   JOIN gender g ON s.gender_id = g.id   JOIN colour c ON s.eye_colour_id = c.id   WHERE g.gender = 'Female'   AND c.colour = 'Blue' ) SELECT   ROUND((     (SELECT total_blue_female_superheroes FROM BlueFemaleSuperheroes) * 100.0 \/ (SELECT total_female_superheroes FROM FemaleSuperheroes)   ), 2) AS percentage_blue_female_superheroes; ","gpt4_mini_few_shot":"WITH female_heroes AS ( SELECT COUNT(*) AS total_female_heroes FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Female' ), blue_female_heroes AS ( SELECT COUNT(*) AS total_blue_female_heroes FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN colour c ON s.eye_colour_id = c.id WHERE g.gender = 'Female' AND c.colour = 'Blue' ) SELECT ROUND((bf.total_blue_female_heroes * 100.0 \/ fh.total_female_heroes), 2) AS percentage_blue_female_superheroes FROM female_heroes fh, blue_female_heroes bf;","gemini_few_shot_hint":" WITH female_heroes AS (   SELECT COUNT(DISTINCT s.id) AS total_female_heroes   FROM superhero s   JOIN gender g ON s.gender_id = g.id   WHERE g.gender = 'Female' ), blue_female_heroes AS (   SELECT COUNT(DISTINCT s.id) AS total_blue_female_heroes   FROM superhero s   JOIN gender g ON s.gender_id = g.id   JOIN colour c ON s.skin_colour_id = c.id   WHERE g.gender = 'Female'   AND c.colour = 'Blue' ) SELECT   ROUND((total_blue_female_heroes * 100.0 \/ total_female_heroes), 2) AS percentage_blue_female_heroes FROM blue_female_heroes JOIN female_heroes; ","gpt4_mini_few_shot_hint":"WITH female_heroes AS ( SELECT COUNT(s.id) AS total_female_heroes FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Female' ), blue_female_heroes AS ( SELECT COUNT(s.id) AS total_blue_female_heroes FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN colour c ON s.skin_colour_id = c.id WHERE g.gender = 'Female' AND c.colour = 'Blue' ) SELECT ROUND((b.total_blue_female_heroes * 100.0 \/ f.total_female_heroes), 2) AS percentage_blue_female_heroes FROM female_heroes f, blue_female_heroes b;"},{"question_id":788,"ground_truth":"SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 \/ COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female'","gemini_zero_shot":"WITH TotalFemaleHeroes AS ( SELECT COUNT(*) AS total_female_heroes FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Female' ) SELECT ROUND(COUNT(*) \/ (SELECT total_female_heroes FROM TotalFemaleHeroes) * 100, 2) AS percentage_female_marvel_heroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN gender g ON s.gender_id = g.id WHERE p.publisher_name = 'Marvel Comics' AND g.gender = 'Female';","gpt4_mini_zero_shot":"SELECT (COUNT(CASE WHEN gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN 1 END) * 100.0 \/ COUNT(*)) AS female_hero_percentage FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');","gemini_zero_shot_hint":"SELECT ROUND( (COUNT(CASE WHEN gender = 'Female' AND publisher_name = 'Marvel Comics' THEN 1 END) \/ COUNT(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 END)) * 100, 2 ) AS percentage_of_female_heroes_published_by_marvel_comics FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN gender ON superhero.gender_id = gender.id;","gpt4_mini_zero_shot_hint":"SELECT (COUNT(CASE WHEN g.gender = 'Female' THEN 1 END) * 100.0 \/ COUNT(*)) AS female_percentage FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN gender g ON s.gender_id = g.id WHERE p.publisher_name = 'Marvel Comics';","gemini_few_shot":" WITH FemaleHeroes AS (   SELECT COUNT(DISTINCT s.id) AS total_female_heroes   FROM superhero s   JOIN gender g ON s.gender_id = g.id   WHERE g.gender = 'Female' ), MarvelFemaleHeroes AS (   SELECT COUNT(DISTINCT s.id) AS marvel_female_heroes   FROM superhero s   JOIN gender g ON s.gender_id = g.id   JOIN publisher p ON s.publisher_id = p.id   WHERE g.gender = 'Female' AND p.publisher_name = 'Marvel Comics' ) SELECT   ROUND((     (       SELECT marvel_female_heroes       FROM MarvelFemaleHeroes     ) * 100.0 \/ (       SELECT total_female_heroes       FROM FemaleHeroes     )   ), 2) AS percentage; ","gpt4_mini_few_shot":"WITH total_female_heroes AS ( SELECT COUNT(*) AS total_females FROM superhero s WHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') ), marvel_female_heroes AS ( SELECT COUNT(*) AS marvel_females FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND p.publisher_name = 'Marvel Comics' ) SELECT ROUND((mf.marvel_females * 100.0 \/ tf.total_females), 2) AS percentage_marvel_female_heroes FROM total_female_heroes tf, marvel_female_heroes mf;","gemini_few_shot_hint":" WITH MarvelFemaleHeroes AS (   SELECT COUNT(DISTINCT s.id) AS marvel_female_count   FROM superhero s   JOIN gender g ON s.gender_id = g.id   JOIN publisher p ON s.publisher_id = p.id   WHERE g.gender = 'Female' AND p.publisher_name = 'Marvel Comics' ), TotalFemaleHeroes AS (   SELECT COUNT(DISTINCT s.id) AS total_female_count   FROM superhero s   JOIN gender g ON s.gender_id = g.id   WHERE g.gender = 'Female' ) SELECT   ROUND(     (       CAST(marvel_female_count AS REAL) \/ total_female_count     ) * 100,     2   ) AS percentage_of_female_heroes_by_marvel FROM MarvelFemaleHeroes, TotalFemaleHeroes; ","gpt4_mini_few_shot_hint":"WITH total_marvel_heroes AS ( SELECT COUNT(s.id) AS total_heroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' ), female_marvel_heroes AS ( SELECT COUNT(s.id) AS female_heroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN gender g ON s.gender_id = g.id WHERE p.publisher_name = 'Marvel Comics' AND g.gender = 'Female' ) SELECT ROUND((fm.female_heroes * 100.0 \/ tm.total_heroes), 2) AS percentage_female_heroes FROM total_marvel_heroes tm, female_marvel_heroes fm;"},{"question_id":818,"ground_truth":"SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) * 100 \/ COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad'","gemini_zero_shot":"WITH TotalBadSuperheroes AS ( SELECT COUNT(*) AS total_bad_superheroes FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'Villain' ) SELECT ROUND(COUNT(*) \/ (SELECT total_bad_superheroes FROM TotalBadSuperheroes) * 100, 2) AS percentage_female_villains FROM superhero s JOIN alignment a ON s.alignment_id = a.id JOIN gender g ON s.gender_id = g.id WHERE a.alignment = 'Villain' AND g.gender = 'Female';","gpt4_mini_zero_shot":"SELECT (COUNT(CASE WHEN g.gender = 'Female' THEN 1 END) * 100.0) \/ COUNT(*) AS female_percentage FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'Bad';","gemini_zero_shot_hint":"SELECT CAST( SUM( CASE WHEN gender.id = 2 THEN 1 ELSE 0 END ) \/ COUNT(*) AS DECIMAL(10,2) * 100.0 ) AS percentage_of_female_bad_superheroes FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.id = 2;","gpt4_mini_zero_shot_hint":"SELECT (SUM(CASE WHEN g.id = 2 THEN 1 ELSE 0 END) * 100.0) \/ COUNT(*) AS female_percentage FROM superhero s JOIN alignment a ON s.alignment_id = a.id JOIN gender g ON s.gender_id = g.id WHERE a.id = 2;","gemini_few_shot":" WITH bad_heroes AS (   SELECT COUNT(DISTINCT s.id) AS total_bad_heroes   FROM superhero s   JOIN alignment a ON s.alignment_id = a.id   WHERE a.alignment = 'Bad' ), female_bad_heroes AS (   SELECT COUNT(DISTINCT s.id) AS total_female_bad_heroes   FROM superhero s   JOIN alignment a ON s.alignment_id = a.id   JOIN gender g ON s.gender_id = g.id   WHERE a.alignment = 'Bad' AND g.gender = 'Female' ) SELECT   ROUND(     (       100.0 * fbh.total_female_bad_heroes     ) \/ bh.total_bad_heroes,     2   ) AS percentage_female_bad_heroes FROM female_bad_heroes fbh JOIN bad_heroes bh; ","gpt4_mini_few_shot":"WITH bad_superheroes AS ( SELECT s.id, g.gender FROM superhero s JOIN alignment a ON s.alignment_id = a.id JOIN gender g ON s.gender_id = g.id WHERE a.alignment = 'Bad' ), total_bad_heroes AS ( SELECT COUNT(*) AS total_count FROM bad_superheroes ), female_bad_heroes AS ( SELECT COUNT(*) AS female_count FROM bad_superheroes WHERE gender = 'Female' ) SELECT ROUND((fb.female_count * 100.0 \/ tb.total_count), 2) AS percentage_female_bad_heroes FROM total_bad_heroes tb, female_bad_heroes fb;","gemini_few_shot_hint":" WITH BadSuperheroes AS (   SELECT     s.gender_id   FROM superhero AS s   JOIN alignment AS a     ON s.alignment_id = a.id   WHERE     a.alignment = 'Bad' ) SELECT   CAST(SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 \/ COUNT(*) AS percentage_female FROM BadSuperheroes AS bs JOIN gender AS g   ON bs.gender_id = g.id; ","gpt4_mini_few_shot_hint":"WITH bad_superheroes AS ( SELECT COUNT(s.id) AS total_bad_heroes FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.id = 2 ), female_bad_superheroes AS ( SELECT COUNT(s.id) AS female_bad_heroes FROM superhero s JOIN alignment a ON s.alignment_id = a.id JOIN gender g ON s.gender_id = g.id WHERE a.id = 2 AND g.id = 2 ) SELECT ROUND((fb.female_bad_heroes * 100.0) \/ b.total_bad_heroes, 2) AS female_percentage FROM bad_superheroes b, female_bad_superheroes fb;"},{"question_id":819,"ground_truth":"SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg is NULL","gemini_zero_shot":"WITH SuperheroesWithMissingWeight AS ( SELECT superhero_name FROM superhero WHERE weight_kg IS NULL ) SELECT COUNT(CASE WHEN c.colour = 'Blue' THEN 1 END) - COUNT(CASE WHEN c.colour IS NULL THEN 1 END) AS difference FROM superhero s LEFT JOIN colour c ON s.eye_colour_id = c.id WHERE s.superhero_name IN (SELECT superhero_name FROM SuperheroesWithMissingWeight);","gpt4_mini_zero_shot":"SELECT (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') AND weight_kg IS NULL) AS blue_eyes_count, (SELECT COUNT(*) FROM superhero WHERE eye_colour_id IS NULL AND weight_kg IS NULL) AS no_eye_colour_count, (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') AND weight_kg IS NULL) - (SELECT COUNT(*) FROM superhero WHERE eye_colour_id IS NULL AND weight_kg IS NULL) AS difference WHERE weight_kg IS NULL;","gemini_zero_shot_hint":"SELECT SUBTRACT( SUM( CASE WHEN superhero.eye_colour_id = 7 THEN 1 ELSE 0 END ), SUM( CASE WHEN superhero.eye_colour_id = 1 THEN 1 ELSE 0 END ) ) AS eye_color_difference FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE weight_kg = 0 OR weight_kg IS NULL;","gpt4_mini_zero_shot_hint":"SELECT (SUM(CASE WHEN s.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN s.eye_colour_id IS NULL OR s.eye_colour_id = 1 THEN 1 ELSE 0 END)) AS eye_difference FROM superhero s WHERE s.weight_kg = 0 OR s.weight_kg IS NULL;","gemini_few_shot":" SELECT   COUNT(CASE WHEN s.eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') THEN s.id END) -   COUNT(CASE WHEN s.eye_colour_id IS NULL THEN s.id END) AS difference FROM superhero AS s WHERE   s.weight_kg IS NULL; ","gpt4_mini_few_shot":"WITH superheroes_with_missing_weight AS ( SELECT s.id, s.eye_colour_id FROM superhero s WHERE s.weight_kg IS NULL ), blue_eyed_heroes AS ( SELECT COUNT(*) AS blue_eyes_count FROM superheroes_with_missing_weight smw JOIN colour c ON smw.eye_colour_id = c.id WHERE c.colour = 'Blue' ), no_eye_coloured_heroes AS ( SELECT COUNT(*) AS no_eye_colour_count FROM superheroes_with_missing_weight WHERE eye_colour_id IS NULL ) SELECT (SELECT blue_eyes_count FROM blue_eyed_heroes) - (SELECT no_eye_colour_count FROM no_eye_coloured_heroes) AS difference;","gemini_few_shot_hint":" SELECT SUM(CASE WHEN c.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN c.id = 1 THEN 1 ELSE 0 END) AS difference FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.weight_kg IS NULL OR s.weight_kg = 0; ","gpt4_mini_few_shot_hint":"SELECT (SUM(CASE WHEN s.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN s.eye_colour_id = 1 THEN 1 ELSE 0 END)) AS difference FROM superhero s WHERE s.weight_kg = 0;"},{"question_id":829,"ground_truth":"SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id","gemini_zero_shot":"WITH DCSuperheroesCount AS ( SELECT COUNT(*) AS dc_superheroes_count FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics' ), MarvelSuperheroesCount AS ( SELECT COUNT(*) AS marvel_superheroes_count FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' ) SELECT (SELECT dc_superheroes_count FROM DCSuperheroesCount) - (SELECT marvel_superheroes_count FROM MarvelSuperheroesCount) AS difference FROM DUAL;","gpt4_mini_zero_shot":"SELECT publisher_name, COUNT(s.id) AS superhero_count FROM publisher p LEFT JOIN superhero s ON p.id = s.publisher_id WHERE p.publisher_name IN ('DC', 'Marvel Comics') GROUP BY p.publisher_name;","gemini_zero_shot_hint":"SELECT ( SUM(CASE WHEN publisher.publisher_name = 'DC Comics' THEN 1 END) - SUM(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 END) ) AS publisher_difference FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id;","gpt4_mini_zero_shot_hint":"SELECT (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics') - (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') AS difference","gemini_few_shot":" WITH dc_count AS (   SELECT COUNT(*) AS dc_superheroes   FROM superhero s   JOIN publisher p ON s.publisher_id = p.id   WHERE p.publisher_name = 'DC Comics' ), marvel_count AS (   SELECT COUNT(*) AS marvel_superheroes   FROM superhero s   JOIN publisher p ON s.publisher_id = p.id   WHERE p.publisher_name = 'Marvel Comics' ) SELECT (   dc_count.dc_superheroes - marvel_count.marvel_superheroes ) AS difference FROM dc_count, marvel_count; ","gpt4_mini_few_shot":"WITH publisher_counts AS ( SELECT p.publisher_name, COUNT(s.id) AS total_heroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name IN ('DC', 'Marvel Comics') GROUP BY p.publisher_name ) SELECT pc1.publisher_name AS publisher, pc1.total_heroes, pc2.total_heroes AS other_publisher_heroes, ABS(pc1.total_heroes - pc2.total_heroes) AS difference FROM publisher_counts pc1 JOIN publisher_counts pc2 ON pc1.publisher_name <> pc2.publisher_name WHERE pc1.publisher_name = 'DC' OR pc1.publisher_name = 'Marvel Comics';","gemini_few_shot_hint":" SELECT    SUM(CASE WHEN p.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS difference FROM superhero s JOIN publisher p ON s.publisher_id = p.id; ","gpt4_mini_few_shot_hint":"WITH publisher_counts AS ( SELECT p.publisher_name, COUNT(s.id) AS total_heroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name IN ('DC Comics', 'Marvel Comics') GROUP BY p.publisher_name ) SELECT SUM(CASE WHEN publisher_name = 'DC Comics' THEN total_heroes ELSE 0 END) AS dc_heroes, SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN total_heroes ELSE 0 END) AS marvel_heroes, SUM(CASE WHEN publisher_name = 'DC Comics' THEN total_heroes ELSE 0 END) - SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN total_heroes ELSE 0 END) AS difference FROM publisher_counts;"},{"question_id":834,"ground_truth":"SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 \/ COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas'","gemini_zero_shot":"WITH TotalLucasSuperheroes AS ( SELECT COUNT(*) AS total_lucas_superheroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'George Lucas' ) SELECT ROUND(COUNT(*) \/ (SELECT total_lucas_superheroes FROM TotalLucasSuperheroes) * 100, 2) AS percentage_female_lucas_superheroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN gender g ON s.gender_id = g.id WHERE p.publisher_name = 'George Lucas' AND g.gender = 'Female';","gpt4_mini_zero_shot":"SELECT (COUNT(CASE WHEN g.gender = 'Female' THEN 1 END) * 100.0 \/ COUNT(*)) AS female_percentage FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN gender g ON s.gender_id = g.id WHERE p.publisher_name = 'George Lucas';","gemini_zero_shot_hint":"SELECT ( CAST(SUM(CASE WHEN gender = 'Female' AND publisher_name = 'George Lucas' THEN 1 END) AS FLOAT) \/ COUNT(CASE WHEN publisher_name = 'George Lucas' THEN 1 END) * 100.0 ) AS percentage_of_female_superheroes_created_by_george_lucas FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN gender ON superhero.gender_id = gender.id;","gpt4_mini_zero_shot_hint":"SELECT (SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END) * 100.0) \/ COUNT(*) AS female_percentage FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN gender g ON s.gender_id = g.id WHERE p.publisher_name = 'George Lucas';","gemini_few_shot":" WITH LucasSuperheroes AS (   SELECT     COUNT(s.id) AS total_lucas_heroes,     SUM(CASE WHEN s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN 1 ELSE 0 END) AS female_lucas_heroes   FROM superhero s   JOIN publisher p ON s.publisher_id = p.id   WHERE     p.publisher_name = 'George Lucas' ) SELECT   CAST(female_lucas_heroes AS REAL) * 100 \/ total_lucas_heroes AS percentage_female_lucas_heroes FROM LucasSuperheroes; ","gpt4_mini_few_shot":"WITH total_superheroes AS ( SELECT COUNT(s.id) AS total_count FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'George Lucas' ), female_superheroes AS ( SELECT COUNT(s.id) AS female_count FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'George Lucas' AND g.gender = 'Female' ) SELECT ROUND(100.0 * fs.female_count \/ ts.total_count, 2) AS percentage_female_superheroes FROM total_superheroes ts, female_superheroes fs;","gemini_few_shot_hint":" WITH LucasSuperheroes AS (   SELECT     s.gender_id,     g.gender   FROM superhero s   JOIN gender g ON s.gender_id = g.id   JOIN publisher p ON s.publisher_id = p.id   WHERE     p.publisher_name = 'George Lucas' ) SELECT   CAST(SUM(CASE WHEN gender = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 \/ COUNT(*) AS female_percentage FROM LucasSuperheroes; ","gpt4_mini_few_shot_hint":"WITH total_george_lucas AS ( SELECT COUNT(*) AS total_heroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'George Lucas' ), female_george_lucas AS ( SELECT COUNT(*) AS female_heroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN gender g ON s.gender_id = g.id WHERE p.publisher_name = 'George Lucas' AND g.gender = 'Female' ) SELECT ROUND((fg.female_heroes * 100.0 \/ tg.total_heroes), 2) AS percentage_female_superheroes FROM total_george_lucas tg, female_george_lucas fg;"},{"question_id":835,"ground_truth":"SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 \/ COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics'","gemini_zero_shot":"WITH TotalMarvelSuperheroes AS ( SELECT COUNT(*) AS total_marvel_superheroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' ) SELECT ROUND(COUNT(*) \/ (SELECT total_marvel_superheroes FROM TotalMarvelSuperheroes) * 100, 2) AS percentage_good_marvel_superheroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN alignment a ON s.alignment_id = a.id WHERE p.publisher_name = 'Marvel Comics' AND a.alignment = 'Good';","gpt4_mini_zero_shot":"SELECT (COUNT(CASE WHEN alignment_id = (SELECT id FROM alignment WHERE alignment = 'Good') THEN 1 END) * 100.0 \/ COUNT(*)) AS good_superhero_percentage FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');","gemini_zero_shot_hint":"SELECT ( CAST(SUM(CASE WHEN alignment.alignment = 'Good' AND publisher.publisher_name = 'Marvel Comics' THEN 1 END) AS FLOAT) \/ COUNT(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 END) * 100.0 ) AS percentage_of_good_superheroes_in_marvel_comics FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id JOIN publisher ON superhero.publisher_id = publisher.id;","gpt4_mini_zero_shot_hint":"SELECT (SUM(CASE WHEN a.alignment = 'Good' THEN 1 ELSE 0 END) * 100.0) \/ COUNT(*) AS good_percentage FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN alignment a ON s.alignment_id = a.id WHERE p.publisher_name = 'Marvel Comics';","gemini_few_shot":" WITH marvel_heroes AS (   SELECT COUNT(DISTINCT s.id) AS total_marvel_heroes   FROM superhero s   JOIN publisher p ON s.publisher_id = p.id   WHERE p.publisher_name = 'Marvel Comics' ), good_marvel_heroes AS (   SELECT COUNT(DISTINCT s.id) AS total_good_marvel_heroes   FROM superhero s   JOIN publisher p ON s.publisher_id = p.id   JOIN alignment a ON s.alignment_id = a.id   WHERE p.publisher_name = 'Marvel Comics' AND a.alignment = 'Good' ) SELECT   ROUND((total_good_marvel_heroes * 100.0) \/ total_marvel_heroes, 2) AS percentage_good_heroes FROM good_marvel_heroes CROSS JOIN marvel_heroes; ","gpt4_mini_few_shot":"WITH total_superheroes AS ( SELECT COUNT(id) AS total_count FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' ), good_superheroes AS ( SELECT COUNT(s.id) AS good_count FROM superhero s JOIN alignment a ON s.alignment_id = a.id JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' AND a.alignment = 'Good' ) SELECT ROUND(100.0 * gs.good_count \/ ts.total_count, 2) AS percentage_good_superheroes FROM total_superheroes ts, good_superheroes gs;","gemini_few_shot_hint":" WITH GoodHeroes AS (   SELECT     COUNT(CASE WHEN s.alignment_id = (       SELECT         id       FROM alignment       WHERE         alignment = 'Good'     ) THEN s.id ELSE NULL END) AS good_heroes_count   FROM superhero AS s   JOIN publisher AS p     ON s.publisher_id = p.id   WHERE     p.publisher_name = 'Marvel Comics' ), TotalHeroes AS (   SELECT     COUNT(*) AS total_heroes_count   FROM superhero AS s   JOIN publisher AS p     ON s.publisher_id = p.id   WHERE     p.publisher_name = 'Marvel Comics' ) SELECT   CAST(gh.good_heroes_count AS REAL) * 100 \/ th.total_heroes_count AS percentage_of_good_heroes FROM GoodHeroes AS gh JOIN TotalHeroes AS th; ","gpt4_mini_few_shot_hint":"WITH total_marvel AS ( SELECT COUNT(*) AS total_heroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' ), good_marvel AS ( SELECT COUNT(*) AS good_heroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN alignment a ON s.alignment_id = a.id WHERE p.publisher_name = 'Marvel Comics' AND a.alignment = 'Good' ) SELECT ROUND((gm.good_heroes * 100.0 \/ tm.total_heroes), 2) AS percentage_good_superheroes FROM total_marvel tm, good_marvel gm;"}]